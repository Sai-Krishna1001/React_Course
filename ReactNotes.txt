Q. What Exactly is React? and why would we use it?
A. ReactJs is a declarative, efficient and flexible Javascript library for building fast and interactive user interfaces.

-->React do not have built-in solution for handling Routing, HttpCore etc.

Q. Why would we learn React?
A. 	1. Market Demand
	2. High Performance(speed)
	-->Internally, React uses some clever techniques to minimize the number 	of costly DOM operations that is required to update the UI
	-->It can change data over time without having to reload the page
	3. Strong Engineering Team(meta)
	4. Large community and Popularity(w3 schools, etc)

-->Components are one of the basic building blocks of React.

Q. What is a Component?
A.  

Q. How do we pass data from componentA to componentB?
A. In React, data can be passed from one component(ComponentA) to another component(ComponentB) through the use of props. Props(short for properties) are a way to pass data from a parent component to its child components.

--> props(properties): It is an object that stores the value of an attribute of a tag.
--> props are immutable.

Q. What is a Hook?
A. Hooks allow us to "hook" into React features such as state and lifecycle methods.

Hook Rules
============
--> Hooks can only be called inside React function components.
--> Hooks can only be called at the top level of a component.
--> Hooks cannot be eConditional

Note: Hooks will not work in React class components.

--> useState -- for managing component state
--> useEffect -- for handling side effects
--> useContext -- for accessing context values
--> useRef -- for accessing and manipulating DOM elements.

--> The main difference between 'OnClick' and 'onChange' lies in the purpose and 
associated elements. 'onClick' is used to handle click interactions with various HTML elements, while 'onChange' is 
primarily used with input elements to capture and respond to changes in their values.

--> 'setTimeout' triggers the execution of a function once after a specified delay,
while 'setInterval' triggers the execution of a function repeatedly at a specified interval 
until explicitly stopped. 

--> The 'onSubmit' event is triggered when a form is submitted, either by clicking a submit button or by pressing the Enter key while focussed on an input field within the form.

-->
	
